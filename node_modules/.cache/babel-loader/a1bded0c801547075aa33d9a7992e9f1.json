{"ast":null,"code":"import _classCallCheck from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/work/Documents/Second Quarter/SubmissionKwitter/src/components/PageComponents/ScrollPageComponents/ChitGroups.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chit from \"./Chit\";\nimport { getMessagesAction } from \"../../../actions/messages\";\nimport { getUsersAction } from \"../../../actions/users\"; //good luck implementing this\n\nvar ChitGroups =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChitGroups, _Component);\n\n  function ChitGroups() {\n    _classCallCheck(this, ChitGroups);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChitGroups).apply(this, arguments));\n  }\n\n  _createClass(ChitGroups, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUsersAction();\n      this.props.getMessagesAction();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return (// <SegmentGroup className=\"left-ColDash\">\n        //   <h2>TOP CHITS...</h2>\n        //   <Segment vertical color=\"black\" padded loading>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //   </Segment>\n        //   <h2>TOP WORDS...</h2>\n        //   <Segment vertical color=\"black\" padded loading>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //   </Segment>\n        //   <h2>TOP SQUIRRELS and ELITES...</h2>\n        //   <Segment vertical color=\"black\" padded loading>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //     <Grid.Row>[insert chit here]</Grid.Row>\n        //   </Segment>\n        // </SegmentGroup >\n        React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, this.props.chits.map(function (chit) {\n          return React.createElement(Chit, {\n            key: chit.id,\n            text: chit.text,\n            time: chit.createdAt,\n            self: chit,\n            reRenderMessages: _this.props.getMessagesAction,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          });\n        }))\n      );\n    }\n  }]);\n\n  return ChitGroups;\n}(Component);\n\nexport default connect(function (_ref) {\n  var messages = _ref.messages,\n      users = _ref.users;\n  return {\n    chits: messages.message && messages.message.messages || [],\n    users: users.userId\n  };\n}, {\n  getMessagesAction: getMessagesAction,\n  getUsersAction: getUsersAction\n})(ChitGroups);","map":{"version":3,"sources":["/Users/work/Documents/Second Quarter/SubmissionKwitter/src/components/PageComponents/ScrollPageComponents/ChitGroups.js"],"names":["React","Component","connect","Chit","getMessagesAction","getUsersAction","ChitGroups","props","chits","map","chit","id","text","createdAt","messages","users","message","userId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,cAAT,QAA+B,wBAA/B,C,CAEA;;IACMC,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,cAAX;AACA,WAAKE,KAAL,CAAWH,iBAAX;AACD;;;6BAEQ;AAAA;;AACP,aACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,iBACpB,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,YAAA,IAAI,EAAED,IAAI,CAACE,IAA/B;AAAqC,YAAA,IAAI,EAAEF,IAAI,CAACG,SAAhD;AAA2D,YAAA,IAAI,EAAEH,IAAjE;AAAuE,YAAA,gBAAgB,EAAE,KAAI,CAACH,KAAL,CAAWH,iBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADoB;AAAA,SAAzB,CADH;AApBF;AAyBD;;;;EAhCsBH,S;;AAmCzB,eAAeC,OAAO,CACpB,gBAAyB;AAAA,MAAtBY,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACvB,SAAO;AACLP,IAAAA,KAAK,EAAEM,QAAQ,CAACE,OAAT,IAAoBF,QAAQ,CAACE,OAAT,CAAiBF,QAArC,IAAiD,EADnD;AAELC,IAAAA,KAAK,EAAEA,KAAK,CAACE;AAFR,GAAP;AAID,CANmB,EAOpB;AAAEb,EAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBC,EAAAA,cAAc,EAAdA;AAArB,CAPoB,CAAP,CAQbC,UARa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chit from \"./Chit\";\nimport { getMessagesAction } from \"../../../actions/messages\";\nimport { getUsersAction } from \"../../../actions/users\";\n\n//good luck implementing this\nclass ChitGroups extends Component {\n  componentDidMount() {\n    this.props.getUsersAction();\n    this.props.getMessagesAction();\n  }\n\n  render() {\n    return (\n      // <SegmentGroup className=\"left-ColDash\">\n      //   <h2>TOP CHITS...</h2>\n      //   <Segment vertical color=\"black\" padded loading>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //   </Segment>\n      //   <h2>TOP WORDS...</h2>\n      //   <Segment vertical color=\"black\" padded loading>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //   </Segment>\n      //   <h2>TOP SQUIRRELS and ELITES...</h2>\n      //   <Segment vertical color=\"black\" padded loading>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //     <Grid.Row>[insert chit here]</Grid.Row>\n      //   </Segment>\n      // </SegmentGroup >\n      <React.Fragment>\n        {this.props.chits.map(chit => (\n              <Chit key={chit.id} text={chit.text} time={chit.createdAt} self={chit} reRenderMessages={this.props.getMessagesAction} />))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ messages, users }) => {\n    return {\n      chits: messages.message && messages.message.messages || [],\n      users: users.userId,\n    };\n  },\n  { getMessagesAction, getUsersAction }\n)(ChitGroups);"]},"metadata":{},"sourceType":"module"}