{"ast":null,"code":"import _classCallCheck from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/work/Documents/Second Quarter/SubmissionKwitter/src/components/PageComponents/ScrollPageComponents/Chit.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport { getUserPhotoAction } from \"../../../actions\";\nimport { LikeButton } from \".\";\nimport moment from 'moment'; //pulled this from the feed page and broke it out to its own component, so when you call it, it renders same format\n//for every new post\n//purpose: when new post is needed, and you click on button, this is called and returns template for new post.\n//takes props: 1)profileImage=\"urlLink\" (will adjust this property's value when we plug in and know how to grab the users uploaded profile pic),\n//2. username=\"string\", 3.postContent=\"string\"\n//Also needs to return a post ID (time/data stamp?)\n//example syntax to call Chit: <Chit profileImage=\"http://3rdpartyservicesofflorida.com/wp-content/uploads/2015/03/blank-profile.jpg\" username=\"tamoya\" postContent=\"Tamoya's post\"></Chit>\n\nvar Chit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chit, _Component);\n\n  function Chit() {\n    _classCallCheck(this, Chit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Chit).apply(this, arguments));\n  }\n\n  _createClass(Chit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: \"chitPost-Container\",\n        columns: 2,\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"userProfileDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Image, {\n        class: \"userPostProfileImage\",\n        src: this.props.pictureLocation,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })))), React.createElement(Grid.Column, {\n        width: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.text)), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.username, \" | \", moment(this.props.time).fromNow()), React.createElement(LikeButton, {\n        message: this.props.self,\n        render: this.props.reRenderMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Chit;\n}(Component);\n\nexport default Chit;","map":{"version":3,"sources":["/Users/work/Documents/Second Quarter/SubmissionKwitter/src/components/PageComponents/ScrollPageComponents/Chit.js"],"names":["React","Component","Grid","Image","getUserPhotoAction","LikeButton","moment","Chit","props","pictureLocation","text","username","time","fromNow","self","reRenderMessages"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,UAAT,QAA2B,GAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,I;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,OAAO,EAAE,CAA9C;AAAiD,QAAA,OAAO,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,sBADR;AAEE,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,eAFlB;AAGE,QAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF,EAYE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAWE,IAAf,CADF,CADF,EAIE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWG,QADd,SAC2BL,MAAM,CAAC,KAAKE,KAAL,CAAWI,IAAZ,CAAN,CAAwBC,OAAxB,EAD3B,CAJF,EAOE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,IAAhC;AAAsC,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,gBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAZF,CADF,CADF;AA0BD;;;;EA5BgBd,S;;AA+BnB,eAAeM,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Image } from \"semantic-ui-react\";\nimport { getUserPhotoAction } from \"../../../actions\"\nimport { LikeButton } from \".\"\nimport moment from 'moment'\n//pulled this from the feed page and broke it out to its own component, so when you call it, it renders same format\n//for every new post\n//purpose: when new post is needed, and you click on button, this is called and returns template for new post.\n//takes props: 1)profileImage=\"urlLink\" (will adjust this property's value when we plug in and know how to grab the users uploaded profile pic),\n//2. username=\"string\", 3.postContent=\"string\"\n//Also needs to return a post ID (time/data stamp?)\n//example syntax to call Chit: <Chit profileImage=\"http://3rdpartyservicesofflorida.com/wp-content/uploads/2015/03/blank-profile.jpg\" username=\"tamoya\" postContent=\"Tamoya's post\"></Chit>\nclass Chit extends Component {\n  render() {\n    return (\n      <Grid.Row>\n        <Grid className=\"chitPost-Container\" columns={2} divided >\n          <Grid.Column width={2} >\n            <Grid.Row>\n              <div id=\"userProfileDiv\">\n                <Image\n                  class=\"userPostProfileImage\"\n                  src={this.props.pictureLocation}\n                  alt=\"\"\n                />\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n          <Grid.Column width={7} >\n            <Grid.Row>\n              <p>{this.props.text}</p>\n            </Grid.Row>\n            <Grid.Row>\n              {this.props.username} | {moment(this.props.time).fromNow()}\n            </Grid.Row>\n            <LikeButton message={this.props.self} render={this.props.reRenderMessages}/>\n          </Grid.Column>\n        </Grid>\n      </Grid.Row>\n    );\n  }\n}\n\nexport default Chit"]},"metadata":{},"sourceType":"module"}