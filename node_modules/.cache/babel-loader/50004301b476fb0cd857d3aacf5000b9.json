{"ast":null,"code":"import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { push } from \"connected-react-router\"; // action types\n\nexport var LOGIN = \"LOGIN\";\nexport var LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport var LOGIN_FAIL = \"LOGIN_FAIL\";\nexport var LOGOUT = \"LOGOUT\";\nexport var LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport var LOGOUT_FAIL = \"LOGOUT_FAIL\";\nvar url = domain + \"/auth\"; // action creators\n\nvar login = function login(loginData) {\n  return function (dispatch) {\n    //loginData is an object {username:username, password:password}\n    dispatch({\n      type: LOGIN\n    });\n    return fetch(url + \"/login\", {\n      method: \"POST\",\n      headers: jsonHeaders,\n      body: JSON.stringify(loginData)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LOGIN_SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: LOGIN_FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};\n\nvar logout = function logout(loginData) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n    return fetch(url + \"/logout\", {\n      headers: {\n        Authorization: \"Bearer \".concat(loginData.token)\n      }\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LOGOUT_SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: LOGOUT_FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};\n\nexport var loginThenGoToUserProfile = function loginThenGoToUserProfile(loginData) {\n  return function (dispatch) {\n    return dispatch(login(loginData)).then(function () {\n      return dispatch(push(\"/profile\"));\n    });\n  };\n};\nexport var logoutLoggedInUser = function logoutLoggedInUser(loginData) {\n  return function (dispatch) {\n    return dispatch(logout(loginData)).then(function () {\n      return dispatch(push(\"/\"));\n    }).catch(function () {\n      return dispatch(push(\"/\"));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/work/Documents/Second Quarter/SubmissionKwitter/src/actions/auth.js"],"names":["domain","jsonHeaders","handleJsonResponse","push","LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAIL","url","login","loginData","dispatch","type","fetch","method","headers","body","JSON","stringify","then","result","payload","catch","err","Promise","reject","message","logout","Authorization","token","loginThenGoToUserProfile","logoutLoggedInUser"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B,QAAwD,aAAxD;AACA,SAASC,IAAT,QAAqB,wBAArB,C,CAEA;;AACA,OAAO,IAAMC,KAAK,GAAY,OAAvB;AACP,OAAO,IAAMC,aAAa,GAAI,eAAvB;AACP,OAAO,IAAMC,UAAU,GAAO,YAAvB;AACP,OAAO,IAAMC,MAAM,GAAW,QAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,WAAW,GAAM,aAAvB;AAEP,IAAMC,GAAG,GAAGV,MAAM,GAAG,OAArB,C,CAEA;;AACA,IAAMW,KAAK,GAAG,SAARA,KAAQ,CAAAC,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACrC;AACAA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAIA,WAAOW,KAAK,CAACL,GAAG,GAAG,QAAP,EAAiB;AAC3BM,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAEhB,WAFkB;AAG3BiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,SAAf;AAHqB,KAAjB,CAAL,CAKJS,IALI,CAKCnB,kBALD,EAMJmB,IANI,CAMC,UAAAC,MAAM,EAAI;AACd,aAAOT,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAET,aADQ;AAEdkB,QAAAA,OAAO,EAAED;AAFK,OAAD,CAAf;AAID,KAXI,EAYJE,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CACLd,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,UAAR;AAAoBiB,QAAAA,OAAO,EAAEE,GAAG,CAACG;AAAjC,OAAD,CADH,CAAP;AAGD,KAhBI,CAAP;AAiBD,GAvBsB;AAAA,CAAvB;;AAyBA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAjB,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACtCA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,WAAOQ,KAAK,CAACL,GAAG,GAAG,SAAP,EAAkB;AAC5BO,MAAAA,OAAO,EAAE;AACPa,QAAAA,aAAa,mBAAYlB,SAAS,CAACmB,KAAtB;AADN;AADmB,KAAlB,CAAL,CAKJV,IALI,CAKCnB,kBALD,EAMJmB,IANI,CAMC,UAAAC,MAAM,EAAI;AACd,aAAOT,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEN,cADQ;AAEde,QAAAA,OAAO,EAAED;AAFK,OAAD,CAAf;AAID,KAXI,EAYJE,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CACLd,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,WAAR;AAAqBc,QAAAA,OAAO,EAAEE,GAAG,CAACG;AAAlC,OAAD,CADH,CAAP;AAGD,KAhBI,CAAP;AAiBD,GAtBuB;AAAA,CAAxB;;AAwBA,OAAO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAApB,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC/D,WAAOA,QAAQ,CAACF,KAAK,CAACC,SAAD,CAAN,CAAR,CAA2BS,IAA3B,CAAgC;AAAA,aAAMR,QAAQ,CAACV,IAAI,CAAC,UAAD,CAAL,CAAd;AAAA,KAAhC,CAAP;AACD,GAFgD;AAAA,CAA1C;AAIP,OAAO,IAAM8B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAArB,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACzD,WAAOA,QAAQ,CAACgB,MAAM,CAACjB,SAAD,CAAP,CAAR,CACNS,IADM,CACD;AAAA,aAAMR,QAAQ,CAACV,IAAI,CAAC,GAAD,CAAL,CAAd;AAAA,KADC,EAENqB,KAFM,CAEA;AAAA,aAAKX,QAAQ,CAACV,IAAI,CAAC,GAAD,CAAL,CAAb;AAAA,KAFA,CAAP;AAGD,GAJ0C;AAAA,CAApC","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { push } from \"connected-react-router\";\n\n// action types\nexport const LOGIN          = \"LOGIN\";\nexport const LOGIN_SUCCESS  = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL     = \"LOGIN_FAIL\";\nexport const LOGOUT         = \"LOGOUT\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAIL    = \"LOGOUT_FAIL\";\n\nconst url = domain + \"/auth\";\n\n// action creators\nconst login = loginData => dispatch => {\n  //loginData is an object {username:username, password:password}\n  dispatch({\n    type: LOGIN\n  });\n\n  return fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(loginData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGIN_SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: LOGIN_FAIL, payload: err.message })\n      );\n    });\n};\n\nconst logout = loginData => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n\n  return fetch(url + \"/logout\", {\n    headers: {\n      Authorization: `Bearer ${loginData.token}`\n    }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGOUT_SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: LOGOUT_FAIL, payload: err.message })\n      );\n    });\n}\n\nexport const loginThenGoToUserProfile = loginData => dispatch => {\n  return dispatch(login(loginData)).then(() => dispatch(push(\"/profile\")));\n};\n\nexport const logoutLoggedInUser = loginData => dispatch => {\n  return dispatch(logout(loginData))\n  .then(() => dispatch(push(\"/\")))\n  .catch(()=>(dispatch(push(\"/\"))));\n}"]},"metadata":{},"sourceType":"module"}