{"ast":null,"code":"import _defineProperty from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/work/Documents/Second Quarter/SubmissionKwitter/src/components/Pages/UserProfile.js\";\nimport { ProfileInfo, ProfilePic, PostInfo, NavBar, Chit, UpdatePhotoModal, ChitGroupsUserProfile } from \"../PageComponents/ScrollPageComponents\";\nimport defaultSquirrel from \"../../pictures/profileSquirrel.jpeg\";\nimport settings from \"../../pictures/settingsAcorn.png\";\nimport { Grid } from \"semantic-ui-react\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserAction as getUser, getMessagesAction as getMessages } from \"../../actions\"; // import Spinner from \"react-spinkit\";\n\nvar UserProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserProfile, _Component);\n\n  function UserProfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.users) {\n        this.setState({\n          users: this.props.getUser({\n            userId: this.props.id\n          }).users\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          isLoading = _this$props.isLoading;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(ProfilePic, {\n        isLoading: isLoading,\n        defaultSquirrel: defaultSquirrel,\n        settings: settings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        columns: 2,\n        id: \"profileinfo2\",\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(ProfileInfo, {\n        user: user,\n        message: this.props.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        width: 8,\n        style: {\n          border: '1px solid black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(ChitGroupsUserProfile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(PostInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport default connect(function (_ref) {\n  var auth = _ref.auth,\n      users = _ref.users,\n      messages = _ref.messages;\n  return {\n    isLoading: users.usersLoading,\n    user: users.users && users.users.user || {\n      displayname: \"\",\n      username: \"\",\n      about: \"\"\n    },\n    id: auth.login && auth.login.id || 5,\n    messages: messages.message && messages.message.messages || []\n  };\n}, {\n  getUser: getUser,\n  getMessages: getMessages\n})(UserProfile);","map":{"version":3,"sources":["/Users/work/Documents/Second Quarter/SubmissionKwitter/src/components/Pages/UserProfile.js"],"names":["ProfileInfo","ProfilePic","PostInfo","NavBar","Chit","UpdatePhotoModal","ChitGroupsUserProfile","defaultSquirrel","settings","Grid","React","Component","connect","getUserAction","getUser","getMessagesAction","getMessages","UserProfile","state","handleChange","e","setState","target","name","value","users","props","userId","id","user","isLoading","message","border","auth","messages","usersLoading","displayname","username","about","login"],"mappings":"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","sourcesContent":["import { ProfileInfo, ProfilePic, PostInfo, NavBar, Chit, UpdatePhotoModal, ChitGroupsUserProfile } from \"../PageComponents/ScrollPageComponents\"\nimport defaultSquirrel from \"../../pictures/profileSquirrel.jpeg\";\nimport settings from \"../../pictures/settingsAcorn.png\";\nimport { Grid } from \"semantic-ui-react\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserAction as getUser,\n  getMessagesAction as getMessages\n} from \"../../actions\";\n// import Spinner from \"react-spinkit\";\n\nclass UserProfile extends Component {\n  state = {};\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    if(!this.state.users){this.setState({users:this.props.getUser({ userId: this.props.id }).users})}\n  }\n\n  render() {\n    const { user, isLoading } = this.props;\n    return (\n      <React.Fragment>\n        <NavBar />\n        <ProfilePic isLoading={isLoading} defaultSquirrel={defaultSquirrel} settings={settings}/>\n        <Grid columns={2} id=\"profileinfo2\" divided>\n        <Grid.Column width={1}>\n          <ProfileInfo user={user} message={this.props.message} />\n        </Grid.Column>\n          <Grid.Column width={8} style = {{border: '1px solid black'}}>\n          <ChitGroupsUserProfile />\n          </Grid.Column>\n          <PostInfo />\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default connect(\n  ({ auth, users, messages }) => ({\n    isLoading: users.usersLoading,\n    user: (users.users && users.users.user) || {\n      displayname: \"\",\n      username: \"\",\n      about: \"\"\n    },\n    id: (auth.login && auth.login.id) || 5,\n    messages: (messages.message && messages.message.messages) || []\n  }),\n  { getUser, getMessages }\n)(UserProfile);\n"]},"metadata":{},"sourceType":"module"}