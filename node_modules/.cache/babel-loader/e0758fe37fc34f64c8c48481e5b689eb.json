{"ast":null,"code":"import _objectSpread from \"/Users/work/Documents/Second Quarter/SubmissionKwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { domain, jsonHeaders, handleJsonResponse } from \"./constants\"; // action types\n\nexport var GET_MESSAGES = \"GET_MESSAGES\";\nexport var GET_MESSAGES_SUCCESS = \"GET_MESSAGES_SUCCESS\";\nexport var GET_MESSAGES_FAIL = \"GET_MESSAGES_FAIL\";\nexport var GET_MESSAGE = \"GET_MESSAGE\";\nexport var GET_MESSAGE_SUCCESS = \"GET_MESSAGE_SUCCESS\";\nexport var GET_MESSAGE_FAIL = \"GET_MESSAGE_FAIL\";\nexport var CREATE_MESSAGE = \"CREATE_MESSAGES\";\nexport var CREATE_MESSAGE_SUCCESS = \"CREATE_MESSAGES_SUCCESS\";\nexport var CREATE_MESSAGE_FAIL = \"CREATE_MESSAGES_FAIL\";\nexport var DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport var DELETE_MESSAGE_SUCCESS = \"DELETE_MESSAGE_SUCCESS\";\nexport var DELETE_MESSAGE_FAIL = \"DELETE_MESSAGE_FAIL\";\nvar url = domain + \"/messages\"; // action creators\n\nvar getMessages = function getMessages() {\n  var messageData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch) {\n    //messageData should be an object with {limit:limit, offset:offset}\n    dispatch({\n      type: GET_MESSAGES\n    });\n    var optionalParams = new URLSearchParams();\n    var constructedURL;\n\n    if (!Object.entries(messageData).length === 0 && messageData.constructor === Object) {\n      var keys = messageData.keys();\n      var values = messageData.values();\n\n      for (var i = 0; i < keys.length - 1; i++) {\n        optionalParams.append(keys[i], values[i]);\n      }\n\n      constructedURL = url + \"?\" + optionalParams;\n    } else {\n      constructedURL = url;\n    }\n\n    return fetch(constructedURL).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: GET_MESSAGES_SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: GET_MESSAGES_FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};\n\nvar getMessage = function getMessage(messageData) {\n  return function (dispatch) {\n    //messageData should be an object containing {id:messageId}\n    dispatch({\n      type: GET_MESSAGE\n    });\n    return fetch(url + \"/\" + messageData.id).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: GET_MESSAGE_SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: GET_MESSAGE_FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};\n\nvar createMessage = function createMessage(messageData) {\n  return function (dispatch) {\n    //messageData should be an object with {text:text}\n    dispatch({\n      type: CREATE_MESSAGE\n    });\n    return fetch(url, {\n      method: \"POST\",\n      headers: _objectSpread({}, jsonHeaders, {\n        Authorization: \"Bearer \".concat(messageData.token)\n      }),\n      body: JSON.stringify({\n        text: messageData.text\n      })\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: CREATE_MESSAGE_SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: CREATE_MESSAGE_FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};\n\nvar deleteMessage = function deleteMessage(messageData) {\n  return function (dispatch) {\n    //messageData is an object {id:messageid}\n    dispatch({\n      type: DELETE_MESSAGE\n    });\n    return fetch(url + \"/\" + messageData.id, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \".concat(messageData.token)\n      }\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: DELETE_MESSAGE_SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: DELETE_MESSAGE_FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};\n\nexport var getMessagesAction = function getMessagesAction(messageData) {\n  return function (dispatch) {\n    return dispatch(getMessages(messageData));\n  };\n};\nexport var getMessageAction = function getMessageAction(messageData) {\n  return function (dispatch) {\n    return dispatch(getMessage(messageData));\n  };\n};\nexport var createMessageAction = function createMessageAction(messageData) {\n  return function (dispatch) {\n    return dispatch(createMessage(messageData));\n  };\n};\nexport var deleteMessageAction = function deleteMessageAction(messageData) {\n  return function (dispatch) {\n    return dispatch(deleteMessage(messageData));\n  };\n};","map":{"version":3,"sources":["/Users/work/Documents/Second Quarter/SubmissionKwitter/src/actions/messages.js"],"names":["domain","jsonHeaders","handleJsonResponse","GET_MESSAGES","GET_MESSAGES_SUCCESS","GET_MESSAGES_FAIL","GET_MESSAGE","GET_MESSAGE_SUCCESS","GET_MESSAGE_FAIL","CREATE_MESSAGE","CREATE_MESSAGE_SUCCESS","CREATE_MESSAGE_FAIL","DELETE_MESSAGE","DELETE_MESSAGE_SUCCESS","DELETE_MESSAGE_FAIL","url","getMessages","messageData","dispatch","type","optionalParams","URLSearchParams","constructedURL","Object","entries","length","constructor","keys","values","i","append","fetch","then","result","payload","catch","err","Promise","reject","message","getMessage","id","createMessage","method","headers","Authorization","token","body","JSON","stringify","text","deleteMessage","getMessagesAction","getMessageAction","createMessageAction","deleteMessageAction"],"mappings":"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","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\n\n// action types\nexport const GET_MESSAGES = \"GET_MESSAGES\";\nexport const GET_MESSAGES_SUCCESS = \"GET_MESSAGES_SUCCESS\";\nexport const GET_MESSAGES_FAIL = \"GET_MESSAGES_FAIL\";\nexport const GET_MESSAGE = \"GET_MESSAGE\";\nexport const GET_MESSAGE_SUCCESS = \"GET_MESSAGE_SUCCESS\";\nexport const GET_MESSAGE_FAIL = \"GET_MESSAGE_FAIL\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGES\";\nexport const CREATE_MESSAGE_SUCCESS = \"CREATE_MESSAGES_SUCCESS\";\nexport const CREATE_MESSAGE_FAIL = \"CREATE_MESSAGES_FAIL\";\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_MESSAGE_SUCCESS = \"DELETE_MESSAGE_SUCCESS\";\nexport const DELETE_MESSAGE_FAIL = \"DELETE_MESSAGE_FAIL\";\n\nconst url = domain + \"/messages\";\n\n// action creators\nconst getMessages = (messageData = {}) => dispatch => {\n  //messageData should be an object with {limit:limit, offset:offset}\n  dispatch({\n    type: GET_MESSAGES\n  });\n  let optionalParams = new URLSearchParams()\n  let constructedURL\n  \n  if(!Object.entries(messageData).length === 0 && messageData.constructor === Object){\n    const keys = messageData.keys()\n    const values = messageData.values()\n    for(let i = 0; i < keys.length-1; i++){\n      optionalParams.append(keys[i], values[i])\n    }\n    constructedURL = url+\"?\"+optionalParams \n  } else {\n    constructedURL = url\n  }\n\n\n  return fetch(constructedURL)\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: GET_MESSAGES_SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: GET_MESSAGES_FAIL, payload: err.message })\n      );\n    });\n};\n\nconst getMessage = messageData => dispatch => {\n  //messageData should be an object containing {id:messageId}\n  dispatch({\n    type: GET_MESSAGE\n  });\n\n  return fetch(url + \"/\" + messageData.id)\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: GET_MESSAGE_SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: GET_MESSAGE_FAIL, payload: err.message })\n      );\n    });\n};\n\nconst createMessage = messageData => dispatch => {\n  //messageData should be an object with {text:text}\n  dispatch({\n    type: CREATE_MESSAGE\n  });\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: { ...jsonHeaders, Authorization: `Bearer ${messageData.token}` },\n    body: JSON.stringify({ text: messageData.text })\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: CREATE_MESSAGE_SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: CREATE_MESSAGE_FAIL, payload: err.message })\n      );\n    });\n};\n\nconst deleteMessage = messageData => dispatch => {\n  //messageData is an object {id:messageid}\n  dispatch({\n    type: DELETE_MESSAGE\n  });\n\n  return fetch(url + \"/\" + messageData.id, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${messageData.token}`\n    }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: DELETE_MESSAGE_SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: DELETE_MESSAGE_FAIL, payload: err.message })\n      );\n    });\n};\n\nexport const getMessagesAction = messageData => dispatch => {\n  return dispatch(getMessages(messageData));\n};\nexport const getMessageAction = messageData => dispatch => {\n  return dispatch(getMessage(messageData));\n};\nexport const createMessageAction = messageData => dispatch => {\n  return dispatch(createMessage(messageData));\n};\nexport const deleteMessageAction = messageData => dispatch => {\n  return dispatch(deleteMessage(messageData));\n};\n"]},"metadata":{},"sourceType":"module"}