{"ast":null,"code":"import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { logger } from \"redux-logger\";\nimport createRootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nexport var history = createBrowserHistory();\nexport default function configureStore(preloadedState) {\n  var store = createStore(createRootReducer(history), // root reducer with router state\n  preloadedState, composeWithDevTools(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  logger, thunk // ... other middlewares ...\n  )));\n  store.subscribe(function () {\n    localStorage.setItem('auth', JSON.stringify(store.getState().auth));\n  });\n  return store;\n}","map":{"version":3,"sources":["/Users/work/Documents/Second Quarter/SubmissionKwitter/src/configureStore.js"],"names":["createBrowserHistory","applyMiddleware","createStore","routerMiddleware","logger","createRootReducer","thunk","composeWithDevTools","history","configureStore","preloadedState","store","subscribe","localStorage","setItem","JSON","stringify","getState","auth"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,iBAAP,MAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,IAAMC,OAAO,GAAGR,oBAAoB,EAApC;AAEP,eAAe,SAASS,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,MAAMC,KAAK,GAAGT,WAAW,CACvBG,iBAAiB,CAACG,OAAD,CADM,EACK;AAC5BE,EAAAA,cAFuB,EAGvBH,mBAAmB,CACjBN,eAAe,CACbE,gBAAgB,CAACK,OAAD,CADH,EACc;AAC3BJ,EAAAA,MAFa,EAGbE,KAHa,CAIb;AAJa,GADE,CAHI,CAAzB;AAYAK,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,KAAK,CAACM,QAAN,GAAiBC,IAAhC,CAA7B;AACD,GAFD;AAIA,SAAOP,KAAP;AACD","sourcesContent":["import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { logger } from \"redux-logger\";\nimport createRootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        logger,\n        thunk,\n        // ... other middlewares ...\n      )\n    )\n  );\n  store.subscribe(() => {\n    localStorage.setItem('auth', JSON.stringify(store.getState().auth))\n  });\n  \n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}